-- GymNestUserDB

CREATE DATABASE IF NOT EXISTS GymNestUserDB;
USE GymNestUserDB;

CREATE TABLE IF NOT EXISTS Roles (
    RoleID INT AUTO_INCREMENT PRIMARY KEY,
    RoleName VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Username VARCHAR(255) NOT NULL UNIQUE,
    PasswordHash VARCHAR(255) NOT NULL,
    Email VARCHAR(255) NOT NULL UNIQUE,
    RoleID INT,
    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS UserProfiles (
    ProfileID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL UNIQUE,
    FirstName VARCHAR(255) NOT NULL,
    LastName VARCHAR(255) NOT NULL,
    DateOfBirth DATE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- GymNestMembershipDB

CREATE DATABASE IF NOT EXISTS GymNestMembershipDB;
USE GymNestMembershipDB;

CREATE TABLE IF NOT EXISTS Memberships (
    MembershipID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    MembershipType VARCHAR(255) NOT NULL,
    MembershipPrice DECIMAL(10, 2) NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    FOREIGN KEY (UserID) REFERENCES GymNestUserDB.Users(UserID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Payments (
    PaymentID INT AUTO_INCREMENT PRIMARY KEY,
    MembershipID INT,
    Amount DECIMAL(10, 2) NOT NULL,
    PaymentDate DATE NOT NULL,
    Status VARCHAR(100),
    FOREIGN KEY (MembershipID) REFERENCES Memberships(MembershipID) ON DELETE CASCADE
);

-- GymNestBookingDB

CREATE DATABASE IF NOT EXISTS GymNestBookingDB;
USE GymNestBookingDB;

CREATE TABLE IF NOT EXISTS Activities (
    ActivityID INT AUTO_INCREMENT PRIMARY KEY,
    ActivityName VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Schedules (
    ScheduleID INT AUTO_INCREMENT PRIMARY KEY,
    ActivityID INT,
    StartTime DATETIME NOT NULL,
    EndTime DATETIME NOT NULL,
    FOREIGN KEY (ActivityID) REFERENCES Activities(ActivityID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Bookings (
    BookingID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    ScheduleID INT,
    BookingDate DATETIME NOT NULL,
    FOREIGN KEY (ScheduleID) REFERENCES Schedules(ScheduleID) ON DELETE CASCADE,
    FOREIGN KEY (UserID) REFERENCES GymNestUserDB.Users(UserID) ON DELETE CASCADE
);
