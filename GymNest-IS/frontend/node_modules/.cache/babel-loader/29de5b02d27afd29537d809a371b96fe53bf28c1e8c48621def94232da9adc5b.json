{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GymNest\\\\GymNest-IS\\\\frontend\\\\src\\\\components\\\\PayPalButton.js\";\nimport React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialOptions = {\n  \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID,\n  // Sandbox client ID\n  currency: \"USD\",\n  intent: \"capture\"\n};\n\n/**\r\n * Renders a PayPal button component that handles the payment approval process.\r\n * \r\n * * testovaci kreditni karty: https://developer.paypal.com/api/rest/sandbox/card-testing/#link-creditcardgeneratorfortesting\r\n * \r\n * @return {JSX.Element} The PayPal button component.\r\n */\nconst PayPalButton = () => {\n  const handleApprove = (data, actions) => {\n    // logic here\n    console.log(\"Platba byla úspěšná!\", data, actions);\n    return actions.order.capture();\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: initialOptions,\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: {\n        layout: \"vertical\"\n      },\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: \"0.01\" // Částka platby\n            }\n          }],\n          application_context: {\n            shipping_preference: 'NO_SHIPPING' // Nevyžadovat adresu pro dopravu\n          }\n        });\n      },\n      onApprove: handleApprove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = PayPalButton;\nexport default PayPalButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalButton\");","map":{"version":3,"names":["React","PayPalScriptProvider","PayPalButtons","jsxDEV","_jsxDEV","initialOptions","process","env","REACT_APP_PAYPAL_CLIENT_ID","currency","intent","PayPalButton","handleApprove","data","actions","console","log","order","capture","options","children","style","layout","createOrder","create","purchase_units","amount","value","application_context","shipping_preference","onApprove","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Documents/GymNest/GymNest-IS/frontend/src/components/PayPalButton.js"],"sourcesContent":["import React from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst initialOptions = {\r\n    \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID, // Sandbox client ID\r\n    currency: \"USD\",\r\n    intent: \"capture\"\r\n};\r\n\r\n/**\r\n * Renders a PayPal button component that handles the payment approval process.\r\n * \r\n * * testovaci kreditni karty: https://developer.paypal.com/api/rest/sandbox/card-testing/#link-creditcardgeneratorfortesting\r\n * \r\n * @return {JSX.Element} The PayPal button component.\r\n */\r\nconst PayPalButton = () => {\r\n    const handleApprove = (data, actions) => {\r\n        // logic here\r\n        console.log(\"Platba byla úspěšná!\", data, actions);\r\n        return actions.order.capture();\r\n    };\r\n\r\n    return (\r\n        <PayPalScriptProvider options={initialOptions}>\r\n            <PayPalButtons\r\n                style={{ layout: \"vertical\" }}\r\n                createOrder={(data, actions) => {\r\n                    return actions.order.create({\r\n                        purchase_units: [{\r\n                            amount: {\r\n                                value: \"0.01\", // Částka platby\r\n                            },\r\n                        }],\r\n                        application_context: {\r\n                            shipping_preference: 'NO_SHIPPING' // Nevyžadovat adresu pro dopravu\r\n                        }\r\n                    });\r\n                }}\r\n                onApprove={handleApprove}\r\n            />\r\n        </PayPalScriptProvider>\r\n    );\r\n};\r\n\r\nexport default PayPalButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,cAAc,GAAG;EACnB,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAAE;EACrDC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACrC;IACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,IAAI,EAAEC,OAAO,CAAC;IAClD,OAAOA,OAAO,CAACG,KAAK,CAACC,OAAO,CAAC,CAAC;EAClC,CAAC;EAED,oBACId,OAAA,CAACH,oBAAoB;IAACkB,OAAO,EAAEd,cAAe;IAAAe,QAAA,eAC1ChB,OAAA,CAACF,aAAa;MACVmB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAW,CAAE;MAC9BC,WAAW,EAAEA,CAACV,IAAI,EAAEC,OAAO,KAAK;QAC5B,OAAOA,OAAO,CAACG,KAAK,CAACO,MAAM,CAAC;UACxBC,cAAc,EAAE,CAAC;YACbC,MAAM,EAAE;cACJC,KAAK,EAAE,MAAM,CAAE;YACnB;UACJ,CAAC,CAAC;UACFC,mBAAmB,EAAE;YACjBC,mBAAmB,EAAE,aAAa,CAAC;UACvC;QACJ,CAAC,CAAC;MACN,CAAE;MACFC,SAAS,EAAElB;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE/B,CAAC;AAACC,EAAA,GA3BIxB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}