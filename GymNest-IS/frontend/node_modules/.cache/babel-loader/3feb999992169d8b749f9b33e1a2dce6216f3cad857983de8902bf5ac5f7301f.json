{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GymNest\\\\GymNest-IS\\\\frontend\\\\src\\\\components\\\\PayPalButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialOptions = {\n  \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID,\n  currency: \"USD\",\n  intent: \"capture\"\n};\nconst subscriptionOptions = [{\n  duration: \"1 měsíc = 10USD\",\n  value: \"10.00\"\n}, {\n  duration: \"6 měsíců = 50USD\",\n  value: \"50.00\"\n},\n// Výhodnější\n{\n  duration: \"1 rok = 90USD\",\n  value: \"90.00\"\n} // Nejvýhodnější\n];\n\n/**\r\n * Renders a PayPal button component that handles the payment approval process.\r\n *\r\n * * testovaci kreditni karty: https://developer.paypal.com/api/rest/sandbox/card-testing/#link-creditcardgeneratorfortesting\r\n *\r\n * @return {JSX.Element} The PayPal button component.\r\n */\nconst PayPalButton = () => {\n  _s();\n  const [selectedAmount, setSelectedAmount] = useState(subscriptionOptions[0].value);\n  const handleApprove = (data, actions) => {\n    // logic here\n    console.log(\"Platba byla úspěšná!\", data, actions);\n    return actions.order.capture();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      children: subscriptionOptions.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setSelectedAmount(option.value),\n        style: {\n          width: '100%'\n        } // Toto zajišťuje, že tlačítka budou stejně široká\n        ,\n        children: option.duration\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: 20\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n        options: initialOptions,\n        children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n          style: {\n            layout: \"vertical\",\n            width: '100%'\n          },\n          createOrder: (data, actions) => {\n            return actions.order.create({\n              purchase_units: [{\n                amount: {\n                  value: selectedAmount\n                }\n              }],\n              application_context: {\n                shipping_preference: 'NO_SHIPPING'\n              }\n            });\n          },\n          onApprove: handleApprove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(PayPalButton, \"V+UMii0JypAy8fb8zwxAMfxUx1A=\");\n_c = PayPalButton;\nexport default PayPalButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalButton\");","map":{"version":3,"names":["React","useState","PayPalScriptProvider","PayPalButtons","Button","ButtonGroup","jsxDEV","_jsxDEV","initialOptions","process","env","REACT_APP_PAYPAL_CLIENT_ID","currency","intent","subscriptionOptions","duration","value","PayPalButton","_s","selectedAmount","setSelectedAmount","handleApprove","data","actions","console","log","order","capture","children","variant","color","fullWidth","map","option","index","onClick","style","width","fileName","_jsxFileName","lineNumber","columnNumber","paddingTop","options","layout","createOrder","create","purchase_units","amount","application_context","shipping_preference","onApprove","_c","$RefreshReg$"],"sources":["D:/Documents/GymNest/GymNest-IS/frontend/src/components/PayPalButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\n\r\nconst initialOptions = {\r\n    \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID,\r\n    currency: \"USD\",\r\n    intent: \"capture\"\r\n};\r\n\r\nconst subscriptionOptions = [\r\n    { duration: \"1 měsíc = 10USD\", value: \"10.00\" },\r\n    { duration: \"6 měsíců = 50USD\", value: \"50.00\" }, // Výhodnější\r\n    { duration: \"1 rok = 90USD\", value: \"90.00\" } // Nejvýhodnější\r\n];\r\n\r\n/**\r\n * Renders a PayPal button component that handles the payment approval process.\r\n *\r\n * * testovaci kreditni karty: https://developer.paypal.com/api/rest/sandbox/card-testing/#link-creditcardgeneratorfortesting\r\n *\r\n * @return {JSX.Element} The PayPal button component.\r\n */\r\nconst PayPalButton = () => {\r\n    const [selectedAmount, setSelectedAmount] = useState(subscriptionOptions[0].value);\r\n\r\n    const handleApprove = (data, actions) => {\r\n        // logic here\r\n        console.log(\"Platba byla úspěšná!\", data, actions);\r\n        return actions.order.capture();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" fullWidth>\r\n                {subscriptionOptions.map((option, index) => (\r\n                    <Button\r\n                      key={index}\r\n                      onClick={() => setSelectedAmount(option.value)}\r\n                      style={{ width: '100%' }} // Toto zajišťuje, že tlačítka budou stejně široká\r\n                    >\r\n                        {option.duration}\r\n                    </Button>\r\n                ))}\r\n            </ButtonGroup>\r\n            <div style={{ paddingTop: 20 }}> {/* Přidává prostor mezi tlačítky a PayPalButtons */}\r\n                <PayPalScriptProvider options={initialOptions}>\r\n                    <PayPalButtons\r\n                        style={{ layout: \"vertical\", width: '100%' }}\r\n                        createOrder={(data, actions) => {\r\n                            return actions.order.create({\r\n                                purchase_units: [{\r\n                                    amount: {\r\n                                        value: selectedAmount,\r\n                                    },\r\n                                }],\r\n                                application_context: {\r\n                                    shipping_preference: 'NO_SHIPPING'\r\n                                }\r\n                            });\r\n                        }}\r\n                        onApprove={handleApprove}\r\n                    />\r\n                </PayPalScriptProvider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PayPalButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}