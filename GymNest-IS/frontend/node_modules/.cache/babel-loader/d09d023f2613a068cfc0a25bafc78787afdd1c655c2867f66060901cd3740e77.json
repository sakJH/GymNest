{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GymNest\\\\GymNest-IS\\\\frontend\\\\src\\\\components\\\\PayPalButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialOptions = {\n  \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID,\n  currency: \"USD\",\n  intent: \"capture\"\n};\nconst subscriptionOptions = [{\n  duration: \"1 měsíc = 10USD\",\n  value: \"10.00\"\n}, {\n  duration: \"6 měsíců = 50USD\",\n  value: \"50.00\"\n},\n// Výhodnější\n{\n  duration: \"1 rok = 90USD\",\n  value: \"90.00\"\n} // Nejvýhodnější\n];\n\n/**\r\n * Renders a PayPal button component that handles the payment approval process.\r\n *\r\n * * testovaci kreditni karty: https://developer.paypal.com/api/rest/sandbox/card-testing/#link-creditcardgeneratorfortesting\r\n *\r\n * @return {JSX.Element} The PayPal button component.\r\n */\nconst PayPalButton = () => {\n  _s();\n  const [selectedAmount, setSelectedAmount] = useState(\"\");\n  const [isSubscriptionSelected, setIsSubscriptionSelected] = useState(false);\n  const handleApprove = (data, actions) => {\n    console.log(\"Platba byla úspěšná!\", data, actions);\n    return actions.order.capture();\n  };\n  const handleSubscriptionSelect = value => {\n    setSelectedAmount(value);\n    setIsSubscriptionSelected(true); // Uživatel vybral předplatné\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      maxWidth: \"600px\",\n      width: \"100%\",\n      mb: 2,\n      children: [\" \", /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        children: subscriptionOptions.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setSelectedAmount(option.value),\n          fullWidth: true,\n          children: option.duration\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      maxWidth: \"600px\",\n      width: \"100%\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n        options: initialOptions,\n        children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n          style: {\n            layout: \"vertical\",\n            tagline: false\n          } /* Odstranit PayPal tagline pro lepší vzhled */,\n          createOrder: (data, actions) => {\n            return actions.order.create({\n              purchase_units: [{\n                amount: {\n                  value: selectedAmount\n                }\n              }],\n              application_context: {\n                shipping_preference: 'NO_SHIPPING'\n              }\n            });\n          },\n          onApprove: handleApprove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(PayPalButton, \"Wad7mmd+aR2WEN+kgCjJ9+B7m28=\");\n_c = PayPalButton;\nexport default PayPalButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalButton\");","map":{"version":3,"names":["React","useState","PayPalScriptProvider","PayPalButtons","Button","ButtonGroup","Box","jsxDEV","_jsxDEV","initialOptions","process","env","REACT_APP_PAYPAL_CLIENT_ID","currency","intent","subscriptionOptions","duration","value","PayPalButton","_s","selectedAmount","setSelectedAmount","isSubscriptionSelected","setIsSubscriptionSelected","handleApprove","data","actions","console","log","order","capture","handleSubscriptionSelect","display","flexDirection","alignItems","width","children","maxWidth","mb","variant","color","fullWidth","map","option","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","style","layout","tagline","createOrder","create","purchase_units","amount","application_context","shipping_preference","onApprove","_c","$RefreshReg$"],"sources":["D:/Documents/GymNest/GymNest-IS/frontend/src/components/PayPalButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst initialOptions = {\r\n    \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID,\r\n    currency: \"USD\",\r\n    intent: \"capture\"\r\n};\r\n\r\nconst subscriptionOptions = [\r\n    { duration: \"1 měsíc = 10USD\", value: \"10.00\" },\r\n    { duration: \"6 měsíců = 50USD\", value: \"50.00\" }, // Výhodnější\r\n    { duration: \"1 rok = 90USD\", value: \"90.00\" } // Nejvýhodnější\r\n];\r\n\r\n/**\r\n * Renders a PayPal button component that handles the payment approval process.\r\n *\r\n * * testovaci kreditni karty: https://developer.paypal.com/api/rest/sandbox/card-testing/#link-creditcardgeneratorfortesting\r\n *\r\n * @return {JSX.Element} The PayPal button component.\r\n */\r\nconst PayPalButton = () => {\r\n    const [selectedAmount, setSelectedAmount] = useState(\"\");\r\n    const [isSubscriptionSelected, setIsSubscriptionSelected] = useState(false);\r\n\r\n    const handleApprove = (data, actions) => {\r\n        console.log(\"Platba byla úspěšná!\", data, actions);\r\n        return actions.order.capture();\r\n    };\r\n\r\n    const handleSubscriptionSelect = (value) => {\r\n        setSelectedAmount(value);\r\n        setIsSubscriptionSelected(true); // Uživatel vybral předplatné\r\n    };\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" width=\"100%\">\r\n            <Box maxWidth=\"600px\" width=\"100%\" mb={2}> {/* Nastavte maximální šířku a zarovnejte na střed */}\r\n                <ButtonGroup variant=\"contained\" color=\"primary\" fullWidth>\r\n                    {subscriptionOptions.map((option, index) => (\r\n                        <Button key={index} onClick={() => setSelectedAmount(option.value)} fullWidth>\r\n                            {option.duration}\r\n                        </Button>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Box>\r\n            <Box maxWidth=\"600px\" width=\"100%\"> {/* Použijte stejnou maximální šířku pro zarovnání PayPal tlačítek */}\r\n                <PayPalScriptProvider options={initialOptions}>\r\n                    <PayPalButtons\r\n                        style={{ layout: \"vertical\", tagline: false }} /* Odstranit PayPal tagline pro lepší vzhled */\r\n                        createOrder={(data, actions) => {\r\n                            return actions.order.create({\r\n                                purchase_units: [{\r\n                                    amount: { value: selectedAmount },\r\n                                }],\r\n                                application_context: { shipping_preference: 'NO_SHIPPING' }\r\n                            });\r\n                        }}\r\n                        onApprove={handleApprove}\r\n                    />\r\n                </PayPalScriptProvider>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PayPalButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}