{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GymNest\\\\GymNest-IS\\\\frontend\\\\src\\\\components\\\\ActionFilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, MenuItem, Button, Box } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionFilter = ({\n  onFilter\n}) => {\n  _s();\n  const [filterOptions, setFilterOptions] = useState({\n    types: []\n  });\n  const [filter, setFilter] = useState({\n    type: '',\n    date: ''\n  });\n  useEffect(() => {\n    const fetchFilterOptions = async () => {\n      try {\n        // TODO endpoint, pro typy akcí??\n        const response = await axios.get('http://localhost:8080/actions/types');\n        setFilterOptions(prev => ({\n          ...prev,\n          types: response.data\n        }));\n      } catch (error) {\n        console.error(\"Error fetching filter options:\", error);\n      }\n    };\n    fetchFilterOptions();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilter(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    gap: 2,\n    alignItems: \"center\",\n    sx: {\n      marginTop: 2,\n      width: '100%',\n      maxWidth: 600,\n      marginX: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Typ\",\n      name: \"type\",\n      value: filter.type,\n      onChange: handleChange,\n      fullWidth: true,\n      children: filterOptions.types.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"date\",\n      label: \"Datum\",\n      name: \"date\",\n      value: filter.date,\n      onChange: handleChange,\n      InputLabelProps: {\n        shrink: true\n      },\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => onFilter(filter),\n      sx: {\n        height: '56px'\n      },\n      children: \"Filtrovat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionFilter, \"LDF/9r8ra+S8NLc3ZuGm5Fjk1X8=\");\n_c = ActionFilter;\nexport default ActionFilter;\nvar _c;\n$RefreshReg$(_c, \"ActionFilter\");","map":{"version":3,"names":["React","useState","useEffect","TextField","MenuItem","Button","Box","axios","jsxDEV","_jsxDEV","ActionFilter","onFilter","_s","filterOptions","setFilterOptions","types","filter","setFilter","type","date","fetchFilterOptions","response","get","prev","data","error","console","handleChange","e","name","value","target","prevState","display","gap","alignItems","sx","marginTop","width","maxWidth","marginX","children","select","label","onChange","fullWidth","map","option","fileName","_jsxFileName","lineNumber","columnNumber","InputLabelProps","shrink","variant","onClick","height","_c","$RefreshReg$"],"sources":["D:/Documents/GymNest/GymNest-IS/frontend/src/components/ActionFilter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, MenuItem, Button, Box } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst ActionFilter = ({ onFilter }) => {\r\n  const [filterOptions, setFilterOptions] = useState({ types: [] });\r\n  const [filter, setFilter] = useState({\r\n    type: '',\r\n    date: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchFilterOptions = async () => {\r\n      try {\r\n        // TODO endpoint, pro typy akcí??\r\n        const response = await axios.get('http://localhost:8080/actions/types');\r\n        setFilterOptions(prev => ({ ...prev, types: response.data }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching filter options:\", error);\r\n      }\r\n    };\r\n\r\n    fetchFilterOptions();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilter(prevState => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      gap={2}\r\n      alignItems=\"center\"\r\n      sx={{\r\n        marginTop: 2,\r\n        width: '100%',\r\n        maxWidth: 600,\r\n        marginX: 'auto'\r\n      }}\r\n    >\r\n      <TextField\r\n        select\r\n        label=\"Typ\"\r\n        name=\"type\"\r\n        value={filter.type}\r\n        onChange={handleChange}\r\n        fullWidth\r\n      >\r\n        {filterOptions.types.map((option) => (\r\n          <MenuItem key={option} value={option}>{option}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        type=\"date\"\r\n        label=\"Datum\"\r\n        name=\"date\"\r\n        value={filter.date}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n      />\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => onFilter(filter)}\r\n        sx={{\r\n          height: '56px',\r\n        }}\r\n      >\r\n        Filtrovat\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActionFilter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}