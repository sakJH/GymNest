# gateway.config.yml
http:
  port: ${PORT_EXPRESS_GATEWAY}

admin:
  port: 9876
  host: express-gateway-service

log:
  - name: default
    level: info
    streams:
      - stream: stdout
        level: debug

apiEndpoints:
  api:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api"
  auth:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/auth/*"
  users:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/users/*"
  profiles:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/profiles/*"
  roles:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/roles/*"
  memberships:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/memberships/*"
  payments:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/payments/*"
  subscriptions:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/subscriptions/*"
  bookings:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/bookings/*"
  activities:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/activities/*"
  schedules:
    host: "*"
    methods: [ "HEAD", "GET", "POST", "PUT", "DELETE" ]
    paths: "/api/schedules/*"

serviceEndpoints:
  apiService:
    url: "http://app-api-gateway:3004"# "http://express-gateway-service:3005" způsůbí log storm (problémy s přesměrováním)
  userService:
    url: "http://app-user-management-service:3001"
  membershipService:
    url: "http://app-membership-service:3002"#, "http://app-management-service:3002", "http://localhost:3002"]
  bookingService:
    url: "http://app-booking-service:3003"#, "http://localhost:3003"]
policies:
  - proxy
  - log
  - basic-auth
  - cors
  - expression
  - key-auth
  - oauth2
  - rate-limit

pipelines:
  apiPipeline:
    apiEndpoints:
      - api
    policies:
      - log:
          - action:
              message: "Request to ${req.method} with ${req.path} ${req.originalUrl} with headers ${JSON.stringify(req.headers)} requesting IP: ${req.ip} origin ${req.headers.origin}"
      - cors:
          - action:
              origin: "*"
              methods: "HEAD, GET, POST, PATCH, PUT, DELETE"
              allowedHeaders: "Content-Type, Authorization"
              exposedHeaders: [ "*" ]
      - proxy:
          - action:
              serviceEndpoint: apiService
              changeOrigin: true
  userPipeline:
    apiEndpoints:
      - auth
      - users
      - profiles
      - roles
    policies:
      - log:
          - action:
              message: "Request to ${req.method} ${req.originalUrl} with headers ${JSON.stringify(req.headers)}"
      - cors:
          - action:
              origin: "*"
              methods: "HEAD, GET, POST, PATCH, PUT, DELETE"
              allowedHeaders: "Content-Type, Authorization"
              exposedHeaders: [ "*" ]
      - proxy:
          - action:
              serviceEndpoint: userService
              changeOrigin: true
  membershipPipeline:
    apiEndpoints:
      - memberships
      - payments
      - subscriptions
    policies:
      - log:
          - action:
              message: "Request to ${req.method} ${req.originalUrl} with headers ${JSON.stringify(req.headers)}"
      - cors:
          - action:
              origin: "*"
              methods: "HEAD, GET, POST, PATCH, PUT, DELETE"
              allowedHeaders: "Content-Type, Authorization"
              exposedHeaders: [ "*" ]
      - proxy:
          - action:
              serviceEndpoint: membershipService
              changeOrigin: true
  bookingPipeline:
    apiEndpoints:
      - activity
      - bookings
      - activities
      - schedules
    policies:
      - log:
          - action:
              message: "Request to ${req.method} ${req.originalUrl} with headers ${JSON.stringify(req.headers)}"
      - cors:
          - action:
              origin: "*"
              methods: "HEAD, GET, POST, PATCH, PUT, DELETE"
              allowedHeaders: "Content-Type, Authorization"
              exposedHeaders: [ "*" ]
      - proxy:
          - action:
              serviceEndpoint: bookingService
              changeOrigin: true
