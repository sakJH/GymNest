version: '3.8'
services:
  app-booking-service:
    build: .
    ports:
      - "3003:3003"
    expose:
      - "3003"
    depends_on:
      - db-booking-service
    env_file:
      - .env
    volumes:
      - .:/usr/src/booking-service
      - /usr/src/booking-service/node_modules
    environment:
      NODE_ENV: development
      DB_HOST: ${DB_HOST_BS}
      DB_USER: ${DB_USER_BS}
      DB_PASSWORD: ${DB_PASSWORD_BS}
      DB_NAME: ${DB_NAME_BS}
      JWT_SECRET: ${JWT_SECRET}
    restart: always
    command: ["./wait-for-it.sh", "db-booking-service:3309", "--", "npm", "start"]
    networks:
      - booking-service-network

  db-booking-service:
    image: mysql:8.3.0
    ports:
      - "3309:3309"
    expose:
        - "3309"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_NAME_BS}
      MYSQL_USER: ${DB_USER_BS}
      MYSQL_PASSWORD: ${DB_PASSWORD_BS}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_BS}
      MYSQL_TCP_PORT: 3309
      MYSQL_CHARACTER_SET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
      TZ: 'Europe/Prague'
    restart: always
    volumes:
      - db_data_booking:/var/lib/mysql
      - ./database/migrations:/docker-entrypoint-initdb.d/
    #command: --authentication_policy=mysql_native_password
    networks:
      - booking-service-network

networks:
  booking-service-network:
    driver: bridge

volumes:
  db_data_booking:
